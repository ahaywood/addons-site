// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"

  runtime                = "workerd"
  moduleFormat           = "esm"
  generatedFileExtension = "ts"
  importFileExtension    = "ts"

  output          = "../generated/prisma"
  previewFeatures = ["queryCompiler", "driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model AddOn {
  id          String      @id @default(uuid()) // Add On ID (UUID-based)
  name        String
  firstName   String
  lastName    String
  email       String
  avatar      String?
  cover       String?
  demo        String
  owner       String
  repo        String
  order       Int         @default(0)
  featured    Boolean     @default(false)
  official    Boolean     @default(false)
  description String
  category    Category    @relation(fields: [categoryId], references: [id])
  categoryId  Int
  tags        AddOnTag[]
  status      Status      @relation(fields: [statusId], references: [id])
  statusId    Int
  createdAt   DateTime    @default(now())
}

model AddOnTag {
  id      Int      @id @default(autoincrement())
  addOnId String
  addOn   AddOn   @relation(fields: [addOnId], references: [id])
  tagId   Int
  tag     Tag     @relation(fields: [tagId], references: [id])

  @@unique([addOnId, tagId])
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  addOns      AddOn[]
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String
  users       User[]
}

model Status {
  id          Int      @id @default(autoincrement())
  name        String
  addOns      AddOn[]
}

model Subscriber {
  id          String      @id @default(uuid())
  firstName   String
  email       String      @unique
  verified    Boolean     @default(false)
  token       String?
  tokenExpiresAt   DateTime?
  createdAt   DateTime    @default(now())
}

model Tag {
  id          Int      @id @default(autoincrement())
  name        String
  addOns      AddOnTag[]
}

model User {
  id          String      @id @default(uuid()) // User ID (UUID-based)
  email    String      @unique
  avatar   String?
  password  String
  firstName String
  lastName  String
  isAdminBarShowing Boolean @default(false)
  notifyNewAddOns Boolean @default(true)
  role      Role      @relation(fields: [roleId], references: [id])
  roleId    Int
  verified  Boolean     @default(false)
  token     String? @unique
  tokenExpiresAt   DateTime?
  createdAt   DateTime    @default(now())

  @@unique([email, token])
  @@index([email, token])
}